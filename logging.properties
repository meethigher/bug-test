# 设置默认日志级别为 INFO
.level=FINE

# 配置日志格式
# %1$tF 日志时间的日期部分（如 2025-07-11）
# %1$tT 日志时间的时间部分（如 13:40:22）
# %4$s 日志等级（如 INFO、FINE）
# %2$s logger 的名称（如 com.example.MyLogger）
# %5$s 	实际的日志消息内容
# %3$s 触发日志的类名（如果能获取到）
# %n 与平台相关的换行符
java.util.logging.SimpleFormatter.format=%1$tF %1$tT [%4$s] %2$s - %5$s (%3$s)%n
# 设置某个包下的日志级别
sun.rmi.transport.level=INFO
java.rmi.server.level=INFO
java.rmi.server.RMIClassLoader.level=INFO
sun.rmi.loader.level=INFO
javax.management.remote.rmi.level=INFO
javax.management.remote.rmi.RMIConnectionImpl.level=INFO

# 添加的 Handler（控制日志输出到哪里）
# handlers=java.util.logging.ConsoleHandler, java.util.logging.FileHandler
handlers=java.util.logging.ConsoleHandler


# 控制台输出配置
java.util.logging.ConsoleHandler.level=FINE
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# 文件输出配置
java.util.logging.FileHandler.level=FINE
# 日志文件路径（支持 %u 用户编号，%g 文件编号）
java.util.logging.FileHandler.pattern=logs/app.log
# 是否追加到文件（默认 false）
java.util.logging.FileHandler.append=true
# 每个日志文件大小（单位：字节），默认 0 表示不限
java.util.logging.FileHandler.limit=1000000
# 保留日志文件个数
java.util.logging.FileHandler.count=5
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter





